package services;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Optional;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import entities.User;
import utils.UserServiceUtil;

public class UserBookingService {
    private User user;
    private static final String USER_PATH = "localdb/users.json"; // Use relative or absolute path
    private ObjectMapper objectMapper = new ObjectMapper();
    private List<User> userList;

    public UserBookingService(User user) throws IOException {
        this.user = user;
        loadUsers();
    }

    // Method to load users from JSON
    private void loadUsers() throws IOException {
        File users = new File(USER_PATH);
        if (users.exists()) {
            userList = objectMapper.readValue(users, new TypeReference<List<User>>() {});
        } else {
            throw new IOException("User data file not found: " + USER_PATH);
        }
    }

	public Boolean loginUser() {
		return  userList.stream().filter(u -> u.getName().equals(user.getName())
				&& UserServiceUtil.checkPassword(user.getPassword(), u.getHashPassword())).findFirst().isPresent();
	}
  public Boolean signUp(User user) {
	  try {
		  userList.add(user);
		  saveuserListToFile(); 
		  return Boolean.TRUE;
	  }catch (Exception e) {
		  return false;
	}
  }

private void saveuserListToFile() {
	File user=new File(USER_PATH);
	objectMapper.writeValue(user, userList);
	
}
}
